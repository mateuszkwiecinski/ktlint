# name must be identical to name of 'pull-request-without-code'
name: Pull request

on:
  push:
    branches: ['master']
    paths:
      - '**/*.kt'
      - '**/*.kts'
      - '**/*.properties'
      - '**/*.toml'
  pull_request:
    paths:
      - '**/*.kt'
      - '**/*.kts'
      - '**/*.properties'
      - '**/*.toml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
  ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEYID }}
  ORG_GRADLE_PROJECT_signingKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
  CLI_TEST_MAX_DURATION_IN_SECONDS: 10

# Note that all "jobs" (build, tests) including "jobs.build.runs-on" should be kept in sync with "pull-request-without-code"
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    name: "[build] OS: ${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-gradle-build

      - name: Build with release Kotlin version
        run: ./gradlew build ktlintCheck --no-configuration-cache

      - name: Build with assemble Kotlin version
        run: ./gradlew -PkotlinDev build ktlintCheck --no-configuration-cache

  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        jdk: [ 8, 11, 17 ] # list of Java versions to run tests against (excluding `java-compilation` version for which tests already have run during `build` job)
    runs-on: ${{ matrix.os }}
    name: "[tests] OS: ${{ matrix.os }}, Java: ${{ matrix.jdk }}"
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-gradle-build
        with:
          additional-java-versions: ${{ matrix.jdk }}

      - run: ./gradlew testOnJdk${{ matrix.jdk }} -PtestJdkVersion=${{ matrix.jdk }}
